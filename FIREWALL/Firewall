#!/bin/bash

# Instructions:
 # 1 - insert this line: '*.=info  -/var/log/iptables.log' in /etc/rsyslog.d/50-default.conf
 # 2 - restart rsyslog: systemctl restart rsyslog.service
 # 3 - run firewall: sudo ./Firewall
 # 4 - verify log: tail -f /var/log/iptables.log
 # 5 - log line example: 
   #a) PortScan Detection:
    #Aug 13 16:49:13 diogenes-inspiron kernel: 
    #[11549.184256] WARNING PORTSCAN ATTACK!!!:IN=wlan0 
    #OUT= MAC=b0:10:41:fe:2d:2b:08:00:27:b5:8d:f4:08:00 
    #SRC=104.105.212.60 DST=113.167.9.21 LEN=40 TOS=0x00 
    #PREC=0x00 TTL=64 ID=0 DF PROTO=TCP SPT=443 DPT=59152 
    #WINDOW=0 RES=0x00 RST URGP=0 
   
   #b) DEATH PING Detection:
    #Aug 13 16:48:41 diogenes-inspiron kernel: 
    #[11517.279744] WARNING DEATH PING ATTACK!!!:IN=wlan0 
    #OUT= MAC=b0:10:41:fe:2d:2b:64:1c:67:f8:be:58:08:00 
    #SRC=113.167.9.40 DST=113.167.9.21 LEN=84 TOS=0x00 
    #PREC=0x00 TTL=64 ID=12546 DF PROTO=ICMP TYPE=8 
    #CODE=0 ID=7488 SEQ=7
    
#By have a beautiful time!!!

#Starting Firewall Setup    
. /lib/lsb/init-functions
#Apply all rule in your IFACE under demand
export NIC=$(route -n | egrep "0.0.0.0" | awk '{print $8}' | sort -u) 

iniciar() {
# Load Modules 
modprobe iptable_nat    # Forwarding
modprobe ip_tables      # Allow data filter
modprobe ipt_recent     # Allow port noking
modprobe iptable_filter # Packet filter

###Empty rules
iptables -F         &&
iptables -F INPUT   &&
iptables -F OUTPUT  &&
iptables -F FORWARD &&
echo "Cleanning Rules "
             
#Changing Policies - first block everything and 
#then release only what is needed.
iptables -P INPUT DROP      &&
iptables -P FORWARD ACCEPT  &&
iptables -P OUTPUT ACCEPT   &&
iptables -N ICMPSCAN        &&
echo "Policies Default"

echo "1" > /proc/sys/net/ipv4/ip_forward
# Masquerading
iptables -A FORWARD --in-interface $NIC -j ACCEPT
#iptables -t nat -A POSTROUTING -o $NIC -j MASQUERADE
#Loopback local process
iptables -A INPUT -i lo -j ACCEPT

#Enables previously accepted connections (Established and Related states)
# Important not to block connections already established when applying rules
iptables -A INPUT -m state --state ESTABLISHED,RELATED -i $NIC -j ACCEPT
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -o $NIC -j ACCEPT

#######------Protection against attacks and connection attempts----------###########

# Rejecting ping (ping protection from death ping)
iptables -I INPUT -p icmp -i $NIC -m icmp --icmp-type echo-request -j ICMPSCAN 
iptables -A ICMPSCAN -i $NIC -m recent --set --name badicmp --rsource
iptables -A ICMPSCAN -i $NIC -m recent --update --seconds 1 --hitcount 2 --name badicmp --rsource -j LOG --log-level 6 --log-prefix "WARNING DEATH PING ATTACK!!!:" 
iptables -A ICMPSCAN -i $NIC -m recent --update --seconds 1 --hitcount 2 --name badicmp --rsource -j DROP
iptables -A ICMPSCAN -i $NIC -m recent --update --seconds 1 --hitcount 1 --name badicmp --rsource -j ACCEPT

# Protecting portscans
# These rules add scanners to the portscan list, and log the attempt.
iptables -A INPUT -p tcp -i $NIC -m multiport --dport 0:65535 -m recent --name portscan --set -j LOG --log-level 6 --log-prefix "WARNING PORTSCAN ATTACK!!!:"
iptables -A INPUT -p tcp -i $NIC -m multiport --dport 0:65535 -m recent --name portscan --set -j DROP
# These rules add scanners to the portscan list, and log the attempt.
iptables -A INPUT -p udp -i $NIC -m multiport --dport 0:65535 -m recent --name portscan --set -j LOG --log-level 6 --log-prefix "WARNING PORTSCAN ATTACK!!!:"
iptables -A INPUT -p udp -i $NIC -m multiport --dport 0:65535 -m recent --name portscan --set -j DROP

# Block Invalid (INVALID) CONNECTIONS
iptables -A INPUT -m state --state INVALID -i $NIC -j LOG --log-level 6 --log-prefix "firewall invalid: -i"
iptables -A FORWARD -m state --state INVALID -o $NIC -j LOG --log-level 6 --log-prefix "firewall invalid -o:"
iptables -A INPUT -m state --state INVALID -i $NIC -j DROP
iptables -A FORWARD -m state --state INVALID -o $NIC -j DROP

#Log synchronization attempts for new external TCP connections
iptables -A FORWARD -p tcp -o $NIC ! --syn -m state --state NEW -j LOG --log-level 6 --log-prefix "firewall new syn:" 
#Blocking requests for external connections. Locks everything except what was specified.
iptables -A INPUT -p tcp -i $NIC ! --syn -m state --state NEW -j DROP
}

parar(){
# Cleanning Tables
iptables -F
iptables -X
iptables -F -t nat
iptables -X -t nat
iptables -F -t mangle
iptables -X -t mangle
echo 0 > /proc/sys/net/ipv4/ip_forward
}

case "$1" in

        "start") 
                if iniciar exit 0; then 
		log_action_begin_msg "Enable Firewall"
                log_action_end_msg $?
	else
                log_action_end_msg $? 
        fi
	;;

       	"stop") 
		if parar exit 0; then
		log_action_begin_msg "Disable Firewall"
		log_action_end_msg $?
	else
		log_action_end_msg $? 
	fi
	;;

        "restart")
		if parar exit 0; then
		log_action_begin_msg "Disable Firewall"
		log_action_end_msg $?
	else
		log_action_end_msg $?
	fi

		if iniciar exit 0; then
		log_action_begin_msg "Enable Firewall"
		log_action_end_msg $?
	else
		log_action_end_msg $?
	fi
	;;

	*) echo "Try start, stop or restart."
esac

